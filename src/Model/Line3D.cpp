/*************************************************************************
【文件名】Line3D.cpp
【功能模块和目的】提供了Line3D类的函数实现
【开发者及日期】李宜阳(liyiyang23@mails.tsinghua.edu.cn) 2024-07-20
【更改记录】
    2024-07-20 完成了绝大多数函数的实现
*************************************************************************/

#include "header/Line3D.hpp"
#include "header/Point3D.hpp"
#include <initializer_list>

/*************************************************************************
【函数名称】Line3D::Line3D
【函数功能】通过初始化列表构造Line3D
【参数】
    Ilist: 用于构造的初始化列表
【返回值】无返回值
【异常】若Ilist长度不为2则抛出异常；若存在重复点则抛出异常
【开发者及日期】李宜阳(liyiyang23@mails.tsinghua.edu.cn) 2024-07-20
【更改记录】
    2024-07-20 完成了函数定义
*************************************************************************/
Line3D::Line3D(std::initializer_list<Point3D> Ilist):
MultiPoint<2>(Ilist) {}
 
/*************************************************************************
【函数名称】Line3D::Line3D
【函数功能】通过指定两端点构造Line3D
【参数】
    point1: 第一个点
    point2: 第二个点
【返回值】无返回值
【异常】若两个点重复则抛出异常
【开发者及日期】李宜阳(liyiyang23@mails.tsinghua.edu.cn) 2024-07-20
【更改记录】
    2024-07-20 完成了函数定义
*************************************************************************/
Line3D::Line3D(const Point3D& point1, const Point3D& point2) : 
    MultiPoint<2>({point1, point2}) {}

/*************************************************************************
【函数名称】Line3D::length
【函数功能】计算线段的长度
【参数】无参数
【返回值】double类型，返回线段的长度
【开发者及日期】李宜阳(liyiyang23@mails.tsinghua.edu.cn) 2024-07-20
【更改记录】
    2024-07-20 完成了函数定义
*************************************************************************/
double Line3D::length() const noexcept {
    return Point3D::distance(getPoint(0), getPoint(1));
}
